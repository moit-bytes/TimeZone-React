{"ast":null,"code":"var _jsxFileName = \"/home/mohitkumar/WORK/Projects/Exercise/timezone/src/Components/MyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyCard = props => {\n  _s();\n\n  const item = props.item;\n  const URL = `http://worldtimeapi.org/api/timezone/${item}`;\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  const [myArr, setMyArr] = useState([]);\n\n  async function makeApiCall(url) {\n    let response = await fetch(url, requestOptions);\n    response = await response.json();\n    let newArr = await Array.from(response);\n    console.log(newArr);\n    setMyArr(newArr);\n  }\n\n  if (myArr.length === 0) {\n    makeApiCall(URL);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid--card\",\n    id: `item-${props.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card--title\",\n      children: \"Asia/Pacific\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyCard, \"LQUaShw2MzBHDr8XzsS5bdFLh4k=\");\n\n_c = MyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCard\");","map":{"version":3,"names":["React","useState","MyCard","props","item","URL","requestOptions","method","redirect","myArr","setMyArr","makeApiCall","url","response","fetch","json","newArr","Array","from","console","log","length","id"],"sources":["/home/mohitkumar/WORK/Projects/Exercise/timezone/src/Components/MyCard.js"],"sourcesContent":["import React, {useState} from 'react'\n\nexport const MyCard = (props) => {\n   \n  const item = props.item;\n  const URL = `http://worldtimeapi.org/api/timezone/${item}`;\n  \n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n\n  const [myArr, setMyArr] = useState([]);\n\n  async function makeApiCall(url)\n  {\n    let response = await fetch(url, requestOptions);\n    response = await response.json();\n    let newArr = await Array.from(response);\n    console.log(newArr);\n    setMyArr(newArr);\n  }  \n  if(myArr.length === 0)\n  {\n    makeApiCall(URL);\n  }\n  \n\n  return (\n    <div className='grid--card' id={`item-${props.id}`}>\n        <h3 className='card--title'>Asia/Pacific</h3>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EAE/B,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;EACA,MAAMC,GAAG,GAAI,wCAAuCD,IAAK,EAAzD;EAEA,IAAIE,cAAc,GAAG;IACnBC,MAAM,EAAE,KADW;IAEnBC,QAAQ,EAAE;EAFS,CAArB;EAKA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;EAEA,eAAeU,WAAf,CAA2BC,GAA3B,EACA;IACE,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMN,cAAN,CAA1B;IACAO,QAAQ,GAAG,MAAMA,QAAQ,CAACE,IAAT,EAAjB;IACA,IAAIC,MAAM,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAWL,QAAX,CAAnB;IACAM,OAAO,CAACC,GAAR,CAAYJ,MAAZ;IACAN,QAAQ,CAACM,MAAD,CAAR;EACD;;EACD,IAAGP,KAAK,CAACY,MAAN,KAAiB,CAApB,EACA;IACEV,WAAW,CAACN,GAAD,CAAX;EACD;;EAGD,oBACE;IAAK,SAAS,EAAC,YAAf;IAA4B,EAAE,EAAG,QAAOF,KAAK,CAACmB,EAAG,EAAjD;IAAA,uBACI;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA/BM;;GAAMpB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}